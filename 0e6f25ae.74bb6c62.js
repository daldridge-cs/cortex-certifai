(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(155)),o={title:"OpenShift Setup",linkTitle:"OpenShift Setup",weight:40,description:"Follow this process to install remote instances of Certifai from the RedHat OpenShift portal.\n"},l={id:"setup/openshift-setup",title:"OpenShift Setup",description:"Follow this process to install remote instances of Certifai from the RedHat OpenShift portal.\n",source:"@site/docs/setup/openshift-setup.md",permalink:"/cortex-certifai/docs/setup/openshift-setup",sidebar:"docs",previous:{title:"Admin setup to view reports",permalink:"/cortex-certifai/docs/setup/setup-example-reports"},next:{title:"Download Certifai Toolkit",permalink:"/cortex-certifai/docs/setup/download-toolkit"}},c=[{value:"Installation prerequisites",id:"installation-prerequisites",children:[]},{value:"Install Certifai from the RedHat Marketplace",id:"install-certifai-from-the-redhat-marketplace",children:[]},{value:"Verify Cortex Certifai Installation",id:"verify-cortex-certifai-installation",children:[]},{value:"Change Certifai configuration options",id:"change-certifai-configuration-options",children:[]}],b={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installation-prerequisites"},"Installation prerequisites"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An OpenShift 4.2+ deployment"),Object(i.b)("li",{parentName:"ul"},"s3 compatible storage where ",Object(i.b)("strong",{parentName:"li"},"Cortex Certifai")," scan results will be stored",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Note that this must be an object store with an s3 compatible API, like noobaa, ceph, or s3 storage.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"For example, you could use the object store included in the OpenShift Container Storage (e.g. noobaa, ceph)"))),Object(i.b)("li",{parentName:"ul"},"Create a bucket, capture access url, bucket name, access key and secret key"))),Object(i.b)("li",{parentName:"ul"},"A namespace/OpenShift project where you will install ",Object(i.b)("strong",{parentName:"li"},"Cortex Certifai"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},'In the "OpenShift Console" go to "Projects" and "Create Project"')))),Object(i.b)("h2",{id:"install-certifai-from-the-redhat-marketplace"},"Install Certifai from the RedHat Marketplace"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In the RedHat Marketplace, either purchase or enroll for the free trial of\nthe ",Object(i.b)("strong",{parentName:"p"},"Cortex Certifai Operator"),".  ")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"On the ",Object(i.b)("em",{parentName:"p"},"Create Operator Subscription")," page, select the ",Object(i.b)("strong",{parentName:"p"},"namespace")," for this\ninstallation from the dropdown. (Namespaces are created by system admins as a prerequisite step.)\nThe other options are set to defaults as follows:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},'Update Channel = "stable"'),Object(i.b)("li",{parentName:"ul"},'Approval Strategy = "automatic"'))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Click ",Object(i.b)("strong",{parentName:"p"},"Subscribe"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The ",Object(i.b)("em",{parentName:"p"},"Installed Operators")," page opens with a list view of operators you've installed.\nClick the name of the operator you just added.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"A page opens that displays an overview of your operator and four other tabs:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"YAML"),Object(i.b)("li",{parentName:"ul"},"Subscription"),Object(i.b)("li",{parentName:"ul"},"Events"),Object(i.b)("li",{parentName:"ul"},"Cortex Certifai Operator"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Go to the last tab, Cortex Certifai Operator, and click ",Object(i.b)("strong",{parentName:"p"},"Create Instance"),"\nto open a terminal window with the following ",Object(i.b)("inlineCode",{parentName:"p"},".yaml")," config file."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"apiVersion: cortex.cognitivescale.com/v1\nkind: Certifai\nmetadata:\n  name: default-certifai\n  namespace: certifai-test01\nspec:\n  console:\n    replicas: 2\n    route-type: none\n    s3:\n      access-key: your access key\n      bucket-name: your bucket name\n      endpoint: s3.amazonaws.com\n      secret-key: your secret key\n  reference-model:\n    enabled: true\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Edit the parameters:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/replicas")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/route-type")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/s3/access-key")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/s3/bucket-name")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/s3/endpoint")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/console/s3/secret-key")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"spec/reference-model/enabled"))))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Example"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"apiVersion")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"APIVersion defines the versioned schema of this representation of an object. Should NOT be changed by users."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"cortex.cognitivescale.com/v1"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"kind")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Identifies the package type you are installing"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"(Always) ",Object(i.b)("inlineCode",{parentName:"td"},"Certifai"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"metadata/name")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The name of your installation as configured"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"default-certifai"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"metadata/namespace")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The namespace you selected in step 4 above"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"certifai-test01"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/replicas")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The number of console instances you want your organization to run concurrently"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default = ",Object(i.b)("inlineCode",{parentName:"td"},"2"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/route-type")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Console Access options are: ",Object(i.b)("br",null),Object(i.b)("inlineCode",{parentName:"td"},"none")," (default): no authentication is required to open the Console",Object(i.b)("br",null),Object(i.b)("inlineCode",{parentName:"td"},"http"),": Unsecured for a closed network",Object(i.b)("br",null),Object(i.b)("inlineCode",{parentName:"td"},"https"),": Secured for the internet",Object(i.b)("br",null),Object(i.b)("inlineCode",{parentName:"td"},"oauth"),": Enables login with RHOS credentials"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default=",Object(i.b)("inlineCode",{parentName:"td"},"none"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/s3/access-key")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The s3 (or Ceph) access key you configured during your infrastructure setup"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"access-key"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/s3/bucket-name")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The s3 (or Ceph) bucket name you configured during your infrastructure setup"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"bucket-name"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/s3/endpoint")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The s3 (or noobaa/Ceph) endpoint you configured during your infrastructure setup"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"s3.amazonaws.com"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/console/s3/secret-key")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The s3 (or Ceph) secret-key you configured during your infrastructure setup"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"s3secret1234"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"spec/reference-model/enabled")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean. Enables or disables the reference model server that is added to your installation. Users may disable the reference model at any time to remove it from the installation to save resources."),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"default = ",Object(i.b)("inlineCode",{parentName:"td"},"true"))))),Object(i.b)("ol",{start:8},Object(i.b)("li",{parentName:"ol"},"At the bottom of the page click ",Object(i.b)("strong",{parentName:"li"},"Create"),". After the instance is created, a list view of instances is displayed.")),Object(i.b)("h2",{id:"verify-cortex-certifai-installation"},"Verify Cortex Certifai Installation"),Object(i.b)("p",null,"Open the ",Object(i.b)("strong",{parentName:"p"},"Cortex Certifai Console")," to verify the OpenShift Container Storage/S3 bucket is connected."),Object(i.b)("p",null,"To find your Console URL:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"If the ",Object(i.b)("strong",{parentName:"li"},"Route-Type")," option is ",Object(i.b)("inlineCode",{parentName:"li"},"http"),", ",Object(i.b)("inlineCode",{parentName:"li"},"https")," or ",Object(i.b)("inlineCode",{parentName:"li"},"oauth"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"To find your ",Object(i.b)("strong",{parentName:"li"},"Certifai Console")," URL: Click ",Object(i.b)("strong",{parentName:"li"},"Networking")," in the left navigation\npanel and then ",Object(i.b)("strong",{parentName:"li"},"Routes"),". The Certifai Console URL is displayed in the ",Object(i.b)("strong",{parentName:"li"},"Location")," column."),Object(i.b)("li",{parentName:"ul"},"Click the link to open your Console and click ",Object(i.b)("strong",{parentName:"li"},"Get Started")," to open the Console."),Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("strong",{parentName:"li"},"OAuth")," is selected for route-type, accept the OpenShift prompts to grant permission during login."))),Object(i.b)("li",{parentName:"ul"},"If the ",Object(i.b)("strong",{parentName:"li"},"Route-Type")," option is ",Object(i.b)("inlineCode",{parentName:"li"},"none"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},'Configure OpenShift Route to expose service "certifai-console" found under networking/services')))),Object(i.b)("h2",{id:"change-certifai-configuration-options"},"Change Certifai configuration options"),Object(i.b)("p",null,"To make changes to the Console instance configuration:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"After the installation is completed, click ",Object(i.b)("strong",{parentName:"li"},"Administration")," in the left navigation panel."),Object(i.b)("li",{parentName:"ol"},"Click ",Object(i.b)("strong",{parentName:"li"},"Custom Resource Definition"),"."),Object(i.b)("li",{parentName:"ol"},"Click ",Object(i.b)("strong",{parentName:"li"},"Certifai")," in the resource list."),Object(i.b)("li",{parentName:"ol"},"On the Custom Resource Definition Details page open the ",Object(i.b)("strong",{parentName:"li"},"Instances")," tab."),Object(i.b)("li",{parentName:"ol"},"Click the name of the instance that you want to configure."),Object(i.b)("li",{parentName:"ol"},"Open the ",Object(i.b)("strong",{parentName:"li"},"YAML")," tab."),Object(i.b)("li",{parentName:"ol"},"Find the configuration parameter you want to change and set it to the desired option.")))}p.isMDXComponent=!0},155:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,O=s["".concat(o,".").concat(m)]||s[m]||u[m]||i;return n?r.a.createElement(O,l({ref:t},b,{components:n})):r.a.createElement(O,l({ref:t},b))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);