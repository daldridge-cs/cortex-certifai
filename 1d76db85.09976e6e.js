(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(1),o=n(6),a=(n(0),n(163)),i={title:"View scans in the Console",linkTitle:"View scans in the Console",weight:60,description:"Learn how to view scan results in the Console.\n"},l={id:"usage/console",title:"View scans in the Console",description:"Learn how to view scan results in the Console.\n",source:"@site/docs/usage/console.md",permalink:"/cortex-certifai/docs/next/usage/console",version:"next",sidebar:"docs",previous:{title:"Install Certifai Toolkit",permalink:"/cortex-certifai/docs/next/setup/install-certifai-cli-lib"},next:{title:"Run sample scans",permalink:"/cortex-certifai/docs/next/usage/sample-scans"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Open the local Certifai Console",id:"open-the-local-certifai-console",children:[]}],s={rightToc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Console allows you to view visualizations for scan results generated from your scans defined locally in:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Certifai CLI"),Object(a.b)("li",{parentName:"ul"},"Python notebooks (using Certifai libraries)"),Object(a.b)("li",{parentName:"ul"},"Text editors (using the .yaml template)")),Object(a.b)("p",null,"To view scans that have been run remotely, go to the remote Certifai Console URL provided by your administrator."),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"../setup/download-toolkit"}),"Download the Certifai Toolkit")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"../setup/install-certifai-cli-lib"}),"Install the Certifai Toolkit"))),Object(a.b)("h2",{id:"open-the-local-certifai-console"},"Open the local Certifai Console"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Activate the ",Object(a.b)("inlineCode",{parentName:"li"},"certifai")," conda environment",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"conda activate certifai\n"))),Object(a.b)("li",{parentName:"ol"},"In your terminal go to the directory where you downloaded your toolkit.",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"cd certifai_toolkit\n"))),Object(a.b)("li",{parentName:"ol"},"Start the local Certifai Console using the following command")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Windows Users")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"SCAN_RESULTS_DIRECTORY")," environment variable accepts unix style paths. So, if you want to store scan results\nin a Windows directory ",Object(a.b)("inlineCode",{parentName:"p"},"folder1\\folder2\\reports"),", you should set ",Object(a.b)("inlineCode",{parentName:"p"},"SCAN_RESULTS_DIRECTORY=folder1/folder2/reports")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Environment Variables for Windows Users")),Object(a.b)("p",null,"Set the environment variables in your CMD prompt appropriately. Double quote paths if they contain any spaces"),Object(a.b)("p",null,"For CMD prompt, you can use the following command"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"set SCAN_RESULTS_DIRECTORY=<unix_style_path_to_reports> python -m certifai.console.app\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"MAC and Linux")," users can use the following command to start the Console"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"SCAN_RESULTS_DIRECTORY=<path-to-reports> python -m certifai.console.app\n")),Object(a.b)("p",null,"Example (displays the sample reports provided with the Certifai Toolkit):"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"SCAN_RESULTS_DIRECTORY=./examples/reports python -m certifai.console.app\n")),Object(a.b)("p",null,"4","."," The Console is available at ",Object(a.b)("inlineCode",{parentName:"p"},"http://localhost:8000"),". Copy this URL into a browser to view your scan result visualizations."))}p.isMDXComponent=!0},163:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),f=r,m=b["".concat(i,".").concat(f)]||b[f]||u[f]||a;return n?o.a.createElement(m,l({ref:t},s,{components:n})):o.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);